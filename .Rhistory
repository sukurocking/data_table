library(data.table)
plot(cars)
library(data.table)
class(1)
class(1L)
?class
?typeof
DT <- data.table(A = 1:5, B = c('a', 'b', 'c', 'd', 'e'), C = TRUE)
DT[2:3,]
DT[2:3] #Gives the same result as the previous code
DT <- data.table(A = 1:5, B = c('a', 'b', 'c', 'd', 'e'), C = TRUE)
DT
DT[2:3,]
DT[2:3] #Gives the same result as the previous code
class(DT)
DT[.N] #Results in the last row of DT
DT[nrow(DT)] #Gives the same result
DT[.N] #Results in the last row of DT
DT[nrow(DT)] #Gives the same result
DT[.N-2] #Third last row of DT
View(DT)
DT[, .(B, C)] #Selecting columns B and C
DT[, .log(A)] #Printing a logarithmic operation on A
DT[, .(B, C)] #Selecting columns B and C
DT[, .log(A)] #Printing a logarithmic operation on A
DT[, .(B, C)] #Selecting columns B and C
DT[, log(A)] #Printing a logarithmic operation on A
DT[, .(B, C)] #Selecting columns B and C
DT[, .(log(A))] #Printing a logarithmic operation on A
DT[, .(B, C)] #Selecting columns B and C
DT[, log = .(log(A))] #Printing a logarithmic operation on A
DT[, .(B, C)] #Selecting columns B and C
DT[, loga = .(log(A))] #Printing a logarithmic operation on A
DT[, .(B, C)] #Selecting columns B and C
DT[, .(log(A))] #Printing a logarithmic operation on A
DT[, .(B, C)] #Selecting columns B and C
DT[, .(loga = log(A))] #Printing a logarithmic operation on A
DT[, .(B, C)] #Selecting columns B and C
DT[, .(loga_mynewcolumn = log(A))] #Printing a logarithmic operation on A
DT[, .(B, C)] #Selecting columns B and C
DT[, .(A, B, C, loga_mynewcolumn = log(A))] #Printing a logarithmic operation on A
DT[, .(A, B, C, loga_mynewcolumn = log(A))] #Printing a data table containing logarithmic operation column on A
DT[, log(5)]
DT[, .(B, C = sum(A))]
echo 10
DT[, {print 10, print 15}]
print 10
DT[, {print '10', print '15'}]
DT[, {print (10), print (15)}]
DT[, {print (10) print (15)}]
print (10)
print 10
DT[, {print(10), print(15)}]
DT[, .({print(10), print(15)})]
DT[, {print(10), print(15)}]
DT[, {print(A)
print(15) }]
DT[, {print(A)print(15) }]
DT[, {print(A) print(15) }]
DT[, {print(A)
print(15) }]
DT[, {print(10)
print(15) }]
DT[, {print(10)
print(15)}]
DT[, {print(10)
print(15)
print(25)}]
DT[, {print(10)
print(15)
print(25)
NULL}]
C
print(C)
print(C)
print(1:5)
print(1:5)
DT[, {print(10)
print(15)
print(1:5)
NULL}]
DT[, {print(10)
print(15)
print(1:5)}]
DT[, .(A, B, C, loga_mynewcolumn = log(A))] #Printing a data table containing logarithmic operation column on A
DT[, .(B, C = sum(A))] # C is recycled
DT[, log(10)] #This results in a vector, not a data table
# Notice the syntax.. This doesn't contain our dot-paranthesis syntax
DT[, {print(10)
print(15)
print(1:5)}] #We are throwing 3 printing statements at `j`
rm(list = ls())
q()
